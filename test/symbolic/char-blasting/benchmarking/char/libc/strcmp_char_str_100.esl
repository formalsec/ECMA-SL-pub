function mk_char_str(size, name) {

  i := size;
  str := [];
  while (i > 0) {
    i := i - 1;
    char := extern int_symbol(s_concat [name, "_c_", int_to_string(i)]);
    extern assume(char >= 0);
    extern assume(char < 256);
    str := l_concat([char], str)
  };

  last := size - 1; 
  last_char := l_nth(str, last);
  extern assume(last_char = 0);

  return str
};

function cs_nth(str, idx) {

  len := l_len(str);
  i := len - 1;
  char := l_nth(str, i);
  
  while(i >= 0) {
    char := ite(idx = i, l_nth(str, i), char);
    i := i - 1
  };

  return char 
};


function cs_len(str) {

  max_len := l_len(str);
  len := max_len - 1;
  i := max_len - 1;
  
  while(i >= 0) {
    char := l_nth(str, i);
    len := ite(char = 0, i, len);
    i := i - 1
  };

  return len 
};

function cs_strcmp(str1, str2) {

  len1 := l_len(str1);
  len2 := l_len(str2);


  len := ite(len1 < len2, len1, len2);
  idx := len - 2;
  
  c1 := l_nth(str1, idx);
  c2 := l_nth(str2, idx);
 
  ret := ite(cs_len(str1) = idx,
            ite(cs_len(str2) = idx, 0, -1),
            ite(c1 = c2, 0, -1));
  
  idx := idx - 1;

  while(idx >= 0) {

    c1 := l_nth(str1, idx);
    c2 := l_nth(str2, idx);

    ret := ite(cs_len(str1) = idx,
            ite(cs_len(str2) = idx, 0, -1),
            ite(c1 = c2, ret, -1));
    
    idx := idx - 1
  };

  return ret


};

function main() {
  
  cs_str1 := mk_char_str(100, "str1");
  cs_str2 := mk_char_str(100, "str2");
  ret := cs_strcmp(cs_str1, cs_str2);
  extern assume (ret = 0);

  return 0
}
